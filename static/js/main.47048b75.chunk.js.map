{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","buttonUp","handleDocumentClick","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,SAAU,IAFd,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,SAAUE,EAAME,OAdpC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAE4B,KAAxBF,KAAKR,MAAMC,SAAX,mCACgCO,KAAKR,MAAMC,SAD3C,KAEI,kCAxBhB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.47048b75.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  buttonUp: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    buttonUp: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentClick);\n  }\n\n  handleDocumentClick = (event: KeyboardEvent) => {\n    this.setState({ buttonUp: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            this.state.buttonUp !== ''\n              ? `The last pressed key is [${this.state.buttonUp}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}